//Generated by wsdl2apex
//
// Example of use:
//			SOAManageBusinessUpgradesService.ManageBusinessUpgradesPort mbuPort = new SOAManageBusinessUpgradesService.ManageBusinessUpgradesPort();
//			mbuPort.clientCertName_x = SOAUtils.CERTIFICATE_NAME;
//			mbuPort.timeout_x = SOAUtils.SOA_TIMEOUT;
//
//			String subscriptionNumber='2929567';
//			String isDealerUpgrade='Yes';
//
//			SOAManageBusinessUpgradesData.getUpgradeDetails_1Response upgradeDetails = mbuPort.getUpgradeDetails_1(subscriptionNumber, null, isDealerUpgrade);
//			System.debug(upgradeDetails);
//
//TODO (if these methods are to be used)
// Maximum limit of 32 parameters reached on these methods. Add them in afterwards to the class.
// Maybe put them in a list or map, or class.
//
// 1. upgradeUpgradeHistory_1()
//    removed last 5 parmsâ€¦
//    ,Date originalContractStartDate,String contractTerms,String contractStatus,String reversedURN,DateTime lastAmendedDate
//
// 2. addUpgradeDetails_1()
//    removed last 3 parms...
//    ,String contractTerms,String contractStatus,String reversedURN
//
public class SOAManageBusinessUpgradesService {
    public class ManageBusinessUpgradesPort {
        //public String endpoint_x = 'https://sdpapi.o2.co.uk/services/ManageBusinessUpgrades_1_0';
        public String endpoint_x = SOA_Integration_Settings__c.getValues('ManageBusinessUpgrades_1_0').Endpoint__c;
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://soa.o2.co.uk/dise/pscommondisedata_1', 'SOAPSCommonDiseData', 'http://soa.o2.co.uk/managebusinessupgradesservice_1', 'SOAManageBusinessUpgradesService', 'http://soa.o2.co.uk/coredata_1', 'SOACoreData2', 'http://soa.o2.co.uk/managebusinessupgradesdata_1', 'SOAManageBusinessUpgradesData'};
        // -------------------
        public SOASecurityElement.Security_element Security;
        private String Security_hns = 'Security=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';
        // -------------------


        public SOAManageBusinessUpgradesData.repDetailsType getRepContactDetails_1(String salesPersonNumber,String salesAccountCode) {
            SOAManageBusinessUpgradesData.getRepContactDetails_1 request_x = new SOAManageBusinessUpgradesData.getRepContactDetails_1();
            SOAManageBusinessUpgradesData.getRepContactDetails_1Response response_x;
            request_x.salesPersonNumber = salesPersonNumber;
            request_x.salesAccountCode = salesAccountCode;
            Map<String, SOAManageBusinessUpgradesData.getRepContactDetails_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.getRepContactDetails_1Response>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getRepContactDetails_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getRepContactDetails_1Response',
              'SOAManageBusinessUpgradesData.getRepContactDetails_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.repDetails;
        }
        public SOAManageBusinessUpgradesData.getUpgradeDetails_1Response getUpgradeDetails_1(String subscriptionNumber,String msisdn,String isDealerUpgrade) {
            // -------------------
            Security = new SOASecurityElement.Security_element(endpoint_x);
            // -------------------

            SOAManageBusinessUpgradesData.getUpgradeDetails_1 request_x = new SOAManageBusinessUpgradesData.getUpgradeDetails_1();
            SOAManageBusinessUpgradesData.getUpgradeDetails_1Response response_x;
            request_x.subscriptionNumber = subscriptionNumber;
            request_x.msisdn = msisdn;
            request_x.isDealerUpgrade = isDealerUpgrade;
            Map<String, SOAManageBusinessUpgradesData.getUpgradeDetails_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.getUpgradeDetails_1Response>();
            response_map_x.put('response_x', response_x);
            System.debug('***request_x:'+request_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getUpgradeDetails_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getUpgradeDetails_1Response',
              'SOAManageBusinessUpgradesData.getUpgradeDetails_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public SOAManageBusinessUpgradesData.getUpgradeHistoryList_1Response getUpgradeHistoryList_1(String subscriptionNumber,String[] upgradeStatus) {
            // -------------------
            Security = new SOASecurityElement.Security_element(endpoint_x);
            // -------------------
            SOAManageBusinessUpgradesData.getUpgradeHistoryList_1 request_x = new SOAManageBusinessUpgradesData.getUpgradeHistoryList_1();
            SOAManageBusinessUpgradesData.getUpgradeHistoryList_1Response response_x;
            request_x.subscriptionNumber = subscriptionNumber;
            request_x.upgradeStatus = upgradeStatus;
            Map<String, SOAManageBusinessUpgradesData.getUpgradeHistoryList_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.getUpgradeHistoryList_1Response>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getUpgradeHistoryList_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getUpgradeHistoryList_1Response',
              'SOAManageBusinessUpgradesData.getUpgradeHistoryList_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public String getEarlyUpgradeFee_1(Integer lineRentalFee,Integer remainingMonths) {
            // -------------------
            Security = new SOASecurityElement.Security_element(endpoint_x);
            // -------------------
            SOAManageBusinessUpgradesData.getEarlyUpgradeFee_1 request_x = new SOAManageBusinessUpgradesData.getEarlyUpgradeFee_1();
            SOAManageBusinessUpgradesData.getEarlyUpgradeFee_1Response response_x;
            request_x.lineRentalFee = lineRentalFee;
            request_x.remainingMonths = remainingMonths;
            Map<String, SOAManageBusinessUpgradesData.getEarlyUpgradeFee_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.getEarlyUpgradeFee_1Response>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getEarlyUpgradeFee_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getEarlyUpgradeFee_1Response',
              'SOAManageBusinessUpgradesData.getEarlyUpgradeFee_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.earlyUpgradeFee;
        }
        public SOAManageBusinessUpgradesData.getUpgradeHistoryDetails_1Response getUpgradeHistoryDetails_1(String subscriptionNumber,String URN) {
            // -------------------
            Security = new SOASecurityElement.Security_element(endpoint_x);
            // -------------------
            SOAManageBusinessUpgradesData.getUpgradeHistoryDetails_1 request_x = new SOAManageBusinessUpgradesData.getUpgradeHistoryDetails_1();
            SOAManageBusinessUpgradesData.getUpgradeHistoryDetails_1Response response_x;
            request_x.subscriptionNumber = subscriptionNumber;
            request_x.URN = URN;
            Map<String, SOAManageBusinessUpgradesData.getUpgradeHistoryDetails_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.getUpgradeHistoryDetails_1Response>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getUpgradeHistoryDetails_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'getUpgradeHistoryDetails_1Response',
              'SOAManageBusinessUpgradesData.getUpgradeHistoryDetails_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public SOACoreData2.ServiceResultType updateUpgradeHistory_1(String URN,String URNPrefix,String subscriptionNumber,String msisdn,SOAManageBusinessUpgradesData.tariffDetailsType currentTariffDetails,Date originalConnectedDate,Date actualUpgradeDate,DateTime actualUpgradeTime,Date newContractStartDate,String newContractTerm,String upgradeType,Date nextUpgradeDate,Date previousNextUpgradeDate,Date previousContractStartDate,String previousContractTerm,String salesPersonCode,String previousSalesPersonCode,String upgradeStatus,String sourceSystem,String batchReference,String repCodeOverride,String eligibilityOverride,SOAManageBusinessUpgradesData.deviceType newDevice,SOAManageBusinessUpgradesData.deviceType previousDevice,String processedByUserID,Integer upgradeCost,String upgradeNotes,Integer averageSpend,String migratedSystem,String newRepCodeCategory,String previousRepCodeCategory,Date nextStandardUpgradeDate) {
            // -------------------
            Security = new SOASecurityElement.Security_element(endpoint_x);
            // -------------------
            SOAManageBusinessUpgradesData.updateUpgradeHistory_1 request_x = new SOAManageBusinessUpgradesData.updateUpgradeHistory_1();
            SOAManageBusinessUpgradesData.updateUpgradeHistory_1Response response_x;
            request_x.URN = URN;
            request_x.URNPrefix = URNPrefix;
            request_x.subscriptionNumber = subscriptionNumber;
            request_x.msisdn = msisdn;
            request_x.currentTariffDetails = currentTariffDetails;
            request_x.originalConnectedDate = originalConnectedDate;
            request_x.actualUpgradeDate = actualUpgradeDate;
            request_x.actualUpgradeTime = actualUpgradeTime;
            request_x.newContractStartDate = newContractStartDate;
            request_x.newContractTerm = newContractTerm;
            request_x.upgradeType = upgradeType;
            request_x.nextUpgradeDate = nextUpgradeDate;
            request_x.previousNextUpgradeDate = previousNextUpgradeDate;
            request_x.previousContractStartDate = previousContractStartDate;
            request_x.previousContractTerm = previousContractTerm;
            request_x.salesPersonCode = salesPersonCode;
            request_x.previousSalesPersonCode = previousSalesPersonCode;
            request_x.upgradeStatus = upgradeStatus;
            request_x.sourceSystem = sourceSystem;
            request_x.batchReference = batchReference;
            request_x.repCodeOverride = repCodeOverride;
            request_x.eligibilityOverride = eligibilityOverride;
            request_x.newDevice = newDevice;
            request_x.previousDevice = previousDevice;
            request_x.processedByUserID = processedByUserID;
            request_x.upgradeCost = upgradeCost;
            request_x.upgradeNotes = upgradeNotes;
            request_x.averageSpend = averageSpend;
            request_x.migratedSystem = migratedSystem;
            request_x.newRepCodeCategory = newRepCodeCategory;
            request_x.previousRepCodeCategory = previousRepCodeCategory;
            request_x.nextStandardUpgradeDate = nextStandardUpgradeDate;
            Map<String, SOAManageBusinessUpgradesData.updateUpgradeHistory_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.updateUpgradeHistory_1Response>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'updateUpgradeHistory_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'updateUpgradeHistory_1Response',
              'SOAManageBusinessUpgradesData.updateUpgradeHistory_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.upgradeStatus;
        }
        public SOAManageBusinessUpgradesData.addUpgradeDetails_1Response addUpgradeDetails_1(String URNPrefix,String subscriptionNumber,String msisdn,SOAManageBusinessUpgradesData.tariffDetailsType currentTariffDetails,Date originalConnectedDate,Date actualUpgradeDate,String actualUpgradeTime,Date newContractStartDate,String newContractTerm,String upgradeType,Date nextUpgradeDate,Date previousNextUpgradeDate,Date previousContractStartDate,String previousContractTerm,String salesPersonCode,String previousSalesPersonCode,String upgradeStatus,String sourceSystem,String batchReference,String repCodeOverride,String eligibilityOverride,SOAManageBusinessUpgradesData.deviceType newDevice,SOAManageBusinessUpgradesData.deviceType previousDevice,String processedByUserID,Integer upgradeCost,String upgradeNotes,Integer averageSpend,String migratedSystem,String newRepCodeCategory,String previousRepCodeCategory,Date nextStandardUpgradeDate,Date originalContractStartDate) {
            // -------------------
            Security = new SOASecurityElement.Security_element(endpoint_x);
            // -------------------
            SOAManageBusinessUpgradesData.addUpgradeDetails_1 request_x = new SOAManageBusinessUpgradesData.addUpgradeDetails_1();
            SOAManageBusinessUpgradesData.addUpgradeDetails_1Response response_x;
            request_x.URNPrefix = URNPrefix;
            request_x.subscriptionNumber = subscriptionNumber;
            request_x.msisdn = msisdn;
            request_x.currentTariffDetails = currentTariffDetails;
            request_x.originalConnectedDate = originalConnectedDate;
            request_x.actualUpgradeDate = actualUpgradeDate;
            request_x.actualUpgradeTime = actualUpgradeTime;
            request_x.newContractStartDate = newContractStartDate;
            request_x.newContractTerm = newContractTerm;
            request_x.upgradeType = upgradeType;
            request_x.nextUpgradeDate = nextUpgradeDate;
            request_x.previousNextUpgradeDate = previousNextUpgradeDate;
            request_x.previousContractStartDate = previousContractStartDate;
            request_x.previousContractTerm = previousContractTerm;
            request_x.salesPersonCode = salesPersonCode;
            request_x.previousSalesPersonCode = previousSalesPersonCode;
            request_x.upgradeStatus = upgradeStatus;
            request_x.sourceSystem = sourceSystem;
            request_x.batchReference = batchReference;
            request_x.repCodeOverride = repCodeOverride;
            request_x.eligibilityOverride = eligibilityOverride;
            request_x.newDevice = newDevice;
            request_x.previousDevice = previousDevice;
            request_x.processedByUserID = processedByUserID;
            request_x.upgradeCost = upgradeCost;
            request_x.upgradeNotes = upgradeNotes;
            request_x.averageSpend = averageSpend;
            request_x.migratedSystem = migratedSystem;
            request_x.newRepCodeCategory = newRepCodeCategory;
            request_x.previousRepCodeCategory = previousRepCodeCategory;
            request_x.nextStandardUpgradeDate = nextStandardUpgradeDate;
            request_x.originalContractStartDate = originalContractStartDate;
            Map<String, SOAManageBusinessUpgradesData.addUpgradeDetails_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.addUpgradeDetails_1Response>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'addUpgradeDetails_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'addUpgradeDetails_1Response',
              'SOAManageBusinessUpgradesData.addUpgradeDetails_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }

        //----------------------------------------------------------------------
        // Function appUpgradeDetails_1 with addUpgradeDetails_1 data type for
        // passing parameters because succeeded apex limit of 32 argumets.
        //----------------------------------------------------------------------
        public SOAManageBusinessUpgradesData.addUpgradeDetails_1Response addUpgradeDetails_1(SOAManageBusinessUpgradesData.addUpgradeDetails_1 request)
        {
            // -------------------
            Security = new SOASecurityElement.Security_element(endpoint_x);
            // -------------------
            SOAManageBusinessUpgradesData.addUpgradeDetails_1 request_x = request;
            SOAManageBusinessUpgradesData.addUpgradeDetails_1Response response_x;
            Map<String, SOAManageBusinessUpgradesData.addUpgradeDetails_1Response> response_map_x = new Map<String, SOAManageBusinessUpgradesData.addUpgradeDetails_1Response>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'addUpgradeDetails_1',
              'http://soa.o2.co.uk/managebusinessupgradesdata_1',
              'addUpgradeDetails_1Response',
              'SOAManageBusinessUpgradesData.addUpgradeDetails_1Response'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }

    }
	//--------------------------------------------------------------------------
	// Test method
	//--------------------------------------------------------------------------
    @isTest(SeeAllData=true)
    static void testSOAService()
    {
		SOAManageBusinessUpgradesService.ManageBusinessUpgradesPort port =
			new SOAManageBusinessUpgradesService.ManageBusinessUpgradesPort();

		try { port.getRepContactDetails_1(null, null);
	    } catch (Exception e) {}
		try { port.getUpgradeDetails_1(null, null, null);
	    } catch (Exception e) {}
		try { port.getUpgradeHistoryList_1(null, null);
		} catch (Exception e) {}
		try { port.getEarlyUpgradeFee_1(null, null);
		} catch (Exception e) {}
		try { port.getUpgradeHistoryDetails_1(null, null);
		} catch (Exception e) {}
		try { port.updateUpgradeHistory_1(null, null, null, null, null, null,null, null,null, null,
				null, null, null, null, null, null,null, null,null, null,
				null, null, null, null, null, null,null, null,null, null,
				null, null);
		} catch (Exception e) {}
		try { port.addUpgradeDetails_1(null, null, null, null, null, null,null, null,null, null,
				null, null, null, null, null, null,null, null,null, null,
				null, null, null, null, null, null,null, null,null, null,
				null, null);
		} catch (Exception e) {}
		try { port.addUpgradeDetails_1(null);
		} catch (Exception e) {}
    }
}