//Generated by wsdl2apex

public class SOABroadbandAvailabilityService {
    public class BroadbandAvailabilityPort {
        //public String endpoint_x = 'https://sdpapi.o2.co.uk/services/broadband/BroadbandAvailability_1_0';
        //public String endpoint_x = SOAUtils.ENDPOINT + '/services/broadband/BroadbandAvailability_1_0';
        public String endpoint_x = SOA_Integration_Settings__c.getValues('Broadband_Availability_Settings').Endpoint__c;
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        public String email;
        // -------------------
        public SOASecurityElement.Security_element Security;
        private String Security_hns = 'Security=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';

        public SOASecurityElement.SOAConsumerTransactionID_element SOAConsumerTransactionID;
        private String SOAConsumerTransactionID_hns = 'SOAConsumerTransactionID=http://soa.o2.co.uk/coredata_1';
        // -------------------        
        private String[] ns_map_type_info = new String[]{'http://soa.o2.co.uk/coredata_1', 'SOACoreData2', 'http://soa.o2.co.uk/broadbandavailabilityservice_1', 'SOABroadbandAvailabilityService', 'http://soa.o2.co.uk/broadbandavailabilitydata_1', 'SOABroadbandAvailabilityData', 'http://soa.o2.co.uk/broadband/pscommonavatar_1', 'SOABroadbandPSCommonAvatar'};
       
        public SOABroadbandAvailabilityData.broadbandAvailability getAvailability(String landlineNumber,String postCode,String subscriberId) {
            // -------------------
            Security = new SOASecurityElement.Security_element();
            SOAConsumerTransactionID = new SOASecurityElement.SOAConsumerTransactionID_element(email);            
            // ------------------- 
            SOABroadbandAvailabilityData.getAvailability request_x = new SOABroadbandAvailabilityData.getAvailability();
            SOABroadbandAvailabilityData.getAvailabilityResponse response_x;
            request_x.landlineNumber = landlineNumber;
            request_x.postCode = postCode;
            request_x.subscriberId = subscriberId;
            Map<String, SOABroadbandAvailabilityData.getAvailabilityResponse> response_map_x = new Map<String, SOABroadbandAvailabilityData.getAvailabilityResponse>();
            response_map_x.put('response_x', response_x);
            if(!Test.isRunningTest()) {
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  '',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getAvailability',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getAvailabilityResponse',
                  'SOABroadbandAvailabilityData.getAvailabilityResponse'}
                );
                
            } else {
                response_map_x.put('response_x',new SOABroadbandAvailabilityData.getAvailabilityResponse());
            }
            response_x = response_map_x.get('response_x');
            return response_x.broadbandAvailability;
        }
       
        public SOABroadbandAvailabilityData.productType[] getAvailableProducts(String landlineNumber,String postCode,String subscriberId) {
            // -------------------
            Security = new SOASecurityElement.Security_element();
            SOAConsumerTransactionID = new SOASecurityElement.SOAConsumerTransactionID_element(email);
            // ------------------- 
            SOABroadbandAvailabilityData.getAvailableProducts request_x = new SOABroadbandAvailabilityData.getAvailableProducts();
            SOABroadbandAvailabilityData.getAvailableProductsResponse response_x;
            request_x.landlineNumber = landlineNumber;
            request_x.postCode = postCode;
            request_x.subscriberId = subscriberId;
            Map<String, SOABroadbandAvailabilityData.getAvailableProductsResponse> response_map_x = new Map<String, SOABroadbandAvailabilityData.getAvailableProductsResponse>();
            response_map_x.put('response_x', response_x);
            if(!Test.isRunningTest()) {
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  '',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getAvailableProducts',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getAvailableProductsResponse',
                  'SOABroadbandAvailabilityData.getAvailableProductsResponse'}
                );            
            } else {
                response_map_x.put('response_x',new SOABroadbandAvailabilityData.getAvailableProductsResponse());
            }
            response_x = response_map_x.get('response_x');
            return response_x.product;
        }
        
        public Long getDistanceFromExchange(String landlineNumber,String postCode,String subscriberId) {
            // -------------------
            Security = new SOASecurityElement.Security_element();
            SOAConsumerTransactionID = new SOASecurityElement.SOAConsumerTransactionID_element(email);
            // -------------------             
            SOABroadbandAvailabilityData.getDistanceFromExchange request_x = new SOABroadbandAvailabilityData.getDistanceFromExchange();
            SOABroadbandAvailabilityData.getDistanceFromExchangeResponse response_x;
            request_x.landlineNumber = landlineNumber;
            request_x.postCode = postCode;
            request_x.subscriberId = subscriberId;
            Map<String, SOABroadbandAvailabilityData.getDistanceFromExchangeResponse> response_map_x = new Map<String, SOABroadbandAvailabilityData.getDistanceFromExchangeResponse>();
            response_map_x.put('response_x', response_x);
            if(!Test.isRunningTest()) {
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  '',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getDistanceFromExchange',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getDistanceFromExchangeResponse',
                  'SOABroadbandAvailabilityData.getDistanceFromExchangeResponse'}
                );
            } else {
                response_map_x.put('response_x',new SOABroadbandAvailabilityData.getDistanceFromExchangeResponse());
            }
            response_x = response_map_x.get('response_x');
            return response_x.lineLength;
        }
       
        public SOABroadbandAvailabilityData.getBusinessAvailability_1Response getBusinessAvailability_1(String dsl,String postCode,String typeOfResponse,String productCategory) {
            // -------------------
            Security = new SOASecurityElement.Security_element();
            //SOAConsumerTransactionID = new SOASecurityElement.SOAConsumerTransactionID_element(email);
            // -------------------              
            SOABroadbandAvailabilityData.getBusinessAvailability_1 request_x = new SOABroadbandAvailabilityData.getBusinessAvailability_1();
            SOABroadbandAvailabilityData.getBusinessAvailability_1Response response_x;
            if(dsl!=null) request_x.dsl = dsl;
            if(postCode!=null) request_x.postCode = postCode;
            if(typeOfResponse!=null) request_x.typeOfResponse = typeOfResponse;
            if(productCategory!=null) request_x.productCategory = productCategory;
            Map<String, SOABroadbandAvailabilityData.getBusinessAvailability_1Response> response_map_x = new Map<String, SOABroadbandAvailabilityData.getBusinessAvailability_1Response>();
            response_map_x.put('response_x', response_x);
            if(!Test.isRunningTest()) {
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  '',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getBusinessAvailability_1',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getBusinessAvailability_1Response',
                  'SOABroadbandAvailabilityData.getBusinessAvailability_1Response'}
                );            
            } else {
                response_map_x.put('response_x', SOABroadbandAvailabilityService.getBBResponseForTestMethods());
            }
            response_x = response_map_x.get('response_x');
            return response_x;
        }
    }
    
    /*
        public SOABroadbandAvailabilityData.getBusinessAvailability_1Response getBusinessAvailability_1_test_for_fault_handling(String dsl,String postCode,String typeOfResponse,String productCategory) {
            // -------------------
            Security = new SOASecurityElement.Security_element();
            // -------------------              
            SOABroadbandAvailabilityData.getBusinessAvailability_1 request_x = new SOABroadbandAvailabilityData.getBusinessAvailability_1();
            SOABroadbandAvailabilityData.getBusinessAvailability_1Response response_x;
            if(dsl!=null) request_x.dsl = dsl;
            if(postCode!=null) request_x.postCode = postCode;
            if(typeOfResponse!=null) request_x.typeOfResponse = typeOfResponse;
            if(productCategory!=null) request_x.productCategory = productCategory;
            Map<String, SOABroadbandAvailabilityData.getBusinessAvailability_1Response> response_map_x = new Map<String, SOABroadbandAvailabilityData.getBusinessAvailability_1Response>();
            response_map_x.put('response_x', response_x);
            if(!Test.isRunningTest()) {
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  '',
                  'http://soa.o2.co.uk/broadbandavailabilitydata_1',
                  'getBusinessAvailability_1',
                  'http://schemas.xmlsoap.org/soap/envelope/',
                  'Body',
                  'SOABroadbandAvailabilityData.Body'}
                );            
            } else {
                response_map_x.put('response_x', SOABroadbandAvailabilityService.getBBResponseForTestMethods());
            }
            response_x = response_map_x.get('response_x');
            return response_x;
        }
    }
    */

    // Manually construct a response message used in test methods
    public static SOABroadbandAvailabilityData.getBusinessAvailability_1Response getBBResponseForTestMethods() {
                       
        SOABroadbandAvailabilityData.getBusinessAvailability_1Response response;
        response = new SOABroadbandAvailabilityData.getBusinessAvailability_1Response();
        SOACoreData2.ServiceResultType retrievalStatus = new SOACoreData2.ServiceResultType();
        retrievalStatus.StatusCode = '2000';
        retrievalStatus.ExternalDescription = 'External Description';
        retrievalStatus.InternalDescription = 'Internal Description';
        response.serviceResult = retrievalStatus;
        
        SOABroadbandAvailabilityData.businessAvailabilityDetailsType badt = new SOABroadbandAvailabilityData.businessAvailabilityDetailsType();
        badt.accessLineStatus = 'ALS';
        badt.anfpCategory = 'ANFP Category';
        badt.isIPStreamAvailable = true;
        badt.isLLUAvailable = true;
        badt.btExchangeName = 'TSTEXT';
        badt.predictedDownloadSpeed = '10 mbps';
        
        SOABroadbandAvailabilityData.districtCodeListType dcl = new SOABroadbandAvailabilityData.districtCodeListType();
        dcl.districtCode = new List <String>();
        dcl.districtCode.add('District Code 1');
        badt.districtCodeList = dcl;
        
        SOABroadbandPSCommonAvatar.ipsCheckerRateType rate = new SOABroadbandPSCommonAvatar.ipsCheckerRateType();
        rate.capacity = '100';
        rate.maxRange = '100';
        rate.speed = '10 mbs';
        badt.fixedRate = rate;
        badt.rateAdaptive = rate;
        badt.wbc = rate;
                    
        //SOABroadbandAvailabilityData.productListType pl = new SOABroadbandAvailabilityData.productListType();
        //badt.productList = pl;   
        
        response.businessAvailabilityDetails = badt;
        return response;
    }
        
    // This is wsdl2apex generated class - asserts not required
    static testMethod void testSOABroadbandAvailabilityService() {
        String landlineNumber = '123456789';
        String dsl = '123456789';
        String subscriberId = '123456789';
        String postCode = 'A11 1AA';
        String productCategory = '';
        String typeOfResponse = '';
        SOABroadbandAvailabilityService.BroadbandAvailabilityPort port = new SOABroadbandAvailabilityService.BroadbandAvailabilityPort();
        port.getAvailability(landlineNumber, postCode, subscriberId);
        port.getAvailableProducts(landlineNumber, postCode, subscriberId);
        port.getBusinessAvailability_1(dsl, postCode, typeOfResponse, productCategory);
        port.getDistanceFromExchange(landlineNumber, postCode, subscriberId);
    }
}