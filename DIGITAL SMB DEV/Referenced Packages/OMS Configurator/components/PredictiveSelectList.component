<apex:component access="global">
  <apex:attribute name="rowClasses" type="String" description="CSS classes for table cell in standard configuration screens" access="global"/>
  <apex:attribute name="styleClass" type="String" description="CSS classes for visual control element" access="global"/>
  <apex:attribute name="attr" type="cscfgc.Attribute" description="Attribute to render" access="global"/>
  <apex:attribute name="required" type="Boolean" description="Is attribute required" access="global"/>
  <apex:attribute name="errors" type="cscfgc.FieldMessage[]" description="Error messages" access="global"/>
  <apex:attribute name="autoStyling" type="Boolean" description="Use SFDC internal styling" access="global"/>
  <apex:attribute name="onchange" type="String" description="OnChange handler" access="global"/>
  
  <apex:outputPanel layout="none" rendered="{!not(autoStyling)}">
  	<span class="attrWrapper">
  		<div style="position:relative" >	 
		<select  data-placeholder="" class="chzn-select cfgAttr {!styleClass}" id="{!attr.absoluteReference.asId}" name="{!attr.absoluteReference.asId}" onchange="CS.updateFromSelect(this.id); CS.rules.evaluateAllRules(); {!onchange}" size="6">
		    <apex:repeat var="option" value="{!attr.availableOptions}">
		        <apex:variable var="selected" value="{!attr.value == option.cscfgc__Value__c || (attr.value == null && attr.definition.cscfgc__Default_Value__c == option.cscfgc__Value__c)}" />
		        <apex:outputPanel rendered="{!selected}">
		            <option value="{!nullvalue(option.value__c, '')}" selected="selected">{!option.name}</option>
		        </apex:outputPanel>
		        <apex:outputPanel rendered="{!not(selected)}">
		            <option value="{!option.cscfgc__Value__c}">{!option.name}</option>
		        </apex:outputPanel>
		    </apex:repeat>
		</select>
		</div>
  	</span>
	<apex:outputText value="{!attr.propertiesAsHtml}" escape="false" />
	<script type="text/javascript">
		jQuery('#{!attr.absoluteReference.asId}').chosen().change(function() {CS.updateFromSelect(this.id); CS.rules.evaluateAllRules(); {!onchange}});
	</script>
  </apex:outputPanel>
  
  <apex:outputPanel layout="none" rendered="{!autoStyling}">
	  <td class="dataCol attrWrapper {!rowClasses}">
	    <div class="{!if(required, 'requiredInput', '')}">
	        <div class="requiredBlock" />
	        <div style="position:relative" >
	        <select data-placeholder="" class="chzn-select cfgAttr" id="{!attr.absoluteReference.asId}" name="{!attr.absoluteReference.asId}" onchange="CS.updateFromSelect(this.id); CS.rules.evaluateAllRules(); {!onchange}">
	            <apex:repeat var="option" value="{!attr.availableOptions}">
	                <apex:variable var="selected" value="{!attr.value == option.cscfgc__Value__c || (attr.value == null && attr.definition.cscfgc__Default_Value__c == option.cscfgc__Value__c)}" />
	                <apex:outputPanel rendered="{!selected}">
	                    <option value="{!nullvalue(option.value__c, '')}" selected="selected">{!option.name}</option>
	                </apex:outputPanel>
	                <apex:outputPanel rendered="{!not(selected)}">
	                    <option value="{!option.cscfgc__Value__c}">{!option.name}</option>
	                </apex:outputPanel>
	            </apex:repeat>
	        </select>
	        </div>
		</div>
		<apex:outputText value="{!attr.propertiesAsHtml}" escape="false" />
	    <c:ErrorMessage errors="{!errors}" field="{!attr.absoluteReference.asId}" />
	  </td>
	<script type="text/javascript">
		jQuery('#{!attr.absoluteReference.asId}').chosen().change(function() {CS.updateFromSelect(this.id); CS.rules.evaluateAllRules(); {!onchange}});
	</script>
  </apex:outputPanel>
	
	
</apex:component>